{
  "id": "d802bd80-110d-11ef-a936-33d712d227ea",
  "version": "1.0.0-beta.2",
  "name": "sandbox",
  "nodes": [
    {
      "id": "KJvc2obvma",
      "name": "geo_Color",
      "x": -119,
      "y": -156,
      "templateName": "geo_Color",
      "params": [
        {
          "name": "data"
        },
        {
          "name": "data type",
          "value": "geo"
        },
        {
          "name": "color",
          "value": [
            0.11372549019607843,
            0.9686274509803922,
            0.7254901960784313,
            1
          ]
        }
      ]
    },
    {
      "id": "JbuyNd2TBb",
      "name": "tex_createSurface",
      "x": 277,
      "y": -475,
      "templateName": "Custom",
      "params": [
        {
          "name": "width",
          "value": 600
        },
        {
          "name": "height",
          "value": 600
        },
        {
          "name": "range",
          "value": [
            -1.1,
            1.1
          ]
        },
        {
          "name": "clearColor",
          "public": true,
          "value": [
            0.22745098039215686,
            0.17647058823529413,
            0.9411764705882353,
            1
          ]
        }
      ]
    },
    {
      "id": "vXFPNljqDa",
      "name": "_DISPLAY",
      "x": 135,
      "y": -151,
      "templateName": "Custom",
      "params": [
        {
          "name": "data",
          "source": {
            "id": "0r60ivdTh5",
            "port": "out"
          }
        },
        {
          "name": "live",
          "public": true,
          "value": true
        },
        {
          "name": "RUN",
          "public": true
        }
      ]
    },
    {
      "id": "0r60ivdTh5",
      "name": "geo_toTex",
      "x": 136,
      "y": -236,
      "templateName": "Custom",
      "params": [
        {
          "name": "geoData",
          "source": {
            "id": "5MfkUkZY9",
            "port": "out"
          }
        },
        {
          "name": "texData",
          "source": {
            "id": "JbuyNd2TBb",
            "port": "out"
          }
        }
      ]
    },
    {
      "id": "Vwk6BriGv",
      "name": "geo_CopyToPoints",
      "x": 53,
      "y": -474,
      "templateName": "Custom",
      "params": [
        {
          "name": "geo",
          "source": {
            "id": "wvJtoMpJa",
            "port": "out"
          }
        },
        {
          "name": "points",
          "source": {
            "id": "2fU3r80ya",
            "port": "out"
          }
        }
      ]
    },
    {
      "id": "sOq_lRVq_",
      "name": "row col count",
      "x": 135,
      "y": -840,
      "templateName": "Custom",
      "params": [
        {
          "name": "row cols",
          "public": true,
          "value": 24
        }
      ]
    },
    {
      "id": "_vP_YKOVh",
      "name": "geo_AttribCreate",
      "x": -92,
      "y": -222,
      "templateName": "Custom",
      "params": [
        {
          "name": "data"
        },
        {
          "name": "data type",
          "value": "geo"
        },
        {
          "name": "floatName",
          "value": ""
        },
        {
          "name": "floatValue",
          "value": 0
        }
      ]
    },
    {
      "id": "HKf7XUCC8",
      "name": "geo_Wrangle",
      "x": -161,
      "y": -470,
      "templateName": "Custom",
      "params": [
        {
          "name": "data"
        }
      ]
    },
    {
      "id": "-c4qQ9pZd",
      "name": "geo_Grid",
      "x": 192,
      "y": -760,
      "templateName": "geo_Grid",
      "params": [
        {
          "name": "centerPt",
          "value": [
            0,
            0
          ]
        },
        {
          "name": "width",
          "value": 2
        },
        {
          "name": "height",
          "value": 2
        },
        {
          "name": "rows",
          "source": {
            "id": "sOq_lRVq_",
            "port": "value"
          }
        },
        {
          "name": "cols",
          "source": {
            "id": "sOq_lRVq_",
            "port": "value"
          }
        }
      ]
    },
    {
      "id": "HlFE5KqDZ",
      "name": "geo_Centroid",
      "x": 193,
      "y": -696,
      "templateName": "geo_Centroid",
      "params": [
        {
          "name": "data",
          "source": {
            "id": "-c4qQ9pZd",
            "port": "out"
          }
        }
      ]
    },
    {
      "id": "wvJtoMpJa",
      "name": "geo_Line",
      "x": -5,
      "y": -759,
      "templateName": "geo_Line",
      "params": [
        {
          "name": "a",
          "value": [
            -1,
            1
          ]
        },
        {
          "name": "b",
          "value": [
            1,
            -1
          ]
        }
      ]
    },
    {
      "id": "ehGysH3I4",
      "name": "geo_ScalePts",
      "x": 140,
      "y": -627,
      "templateName": "Custom",
      "params": [
        {
          "name": "data",
          "source": {
            "id": "HlFE5KqDZ",
            "port": "out"
          }
        },
        {
          "name": "rows",
          "source": {
            "id": "sOq_lRVq_",
            "port": "value"
          }
        }
      ]
    },
    {
      "id": "2fU3r80ya",
      "name": "geo_RandomRotate",
      "x": 144,
      "y": -561,
      "templateName": "Custom",
      "params": [
        {
          "name": "data",
          "source": {
            "id": "ehGysH3I4",
            "port": "out"
          }
        }
      ]
    },
    {
      "id": "5MfkUkZY9",
      "name": "geo_StyleAttribs",
      "x": 51,
      "y": -380,
      "templateName": "Custom",
      "draft": "module.exports = (node, graph) => {\n    const dataIn = node.in('data')\n    const dataOut = node.out('out')\n\n    const type = node.in(\"data type\", \"point\", { type: \"dropdown\", values: [\"point\", \"geo\"] })\n\n    const colorIn = node.in('color', [1, 1, 1, 1], { type: 'color' })\n    const assignColor = node.in('set color', false)\n\n    const weightIn = node.in('weight', 0.01, { min: 0.0001 })\n    const assignWeight = node.in('set weight', false)\n\n    const { getHex } = require('pex-color')\n\n    node.cook = () => {\n        cookUp(node)\n\n        let data = dataIn.value || { pts: [], geo: [] }\n\n        // if (type.value == \"point\") {\n        //     for (let pt of data.pts) {\n        //         pt['color'] = getHex(colorIn.value)\n        //     }\n        // } else {\n        //     for (let pt of data.geo) {\n        //         pt['color'] = getHex(colorIn.value)\n        //     }\n        // }\n\n        dataOut.setValue(data)\n        node.comment = `pts: ${data.pts.length}, geo: ${data.geo.length}`\n    }\n}\n\nfunction cookUp(node) {\n    node.ports\n        .filter((port) => port.dir === 0 && port.source != null)\n        .forEach((port) => {\n            if (typeof port.source.node.cook === 'function') {\n                port.source.node.cook()\n            }\n        })\n}\n",
      "params": [
        {
          "name": "data",
          "source": {
            "id": "Vwk6BriGv",
            "port": "out"
          }
        },
        {
          "name": "data type",
          "value": "point"
        },
        {
          "name": "color",
          "value": [
            1,
            1,
            1,
            1
          ]
        },
        {
          "name": "set color",
          "value": false
        },
        {
          "name": "weight",
          "value": 0.01
        },
        {
          "name": "set weight",
          "value": false
        }
      ]
    },
    {
      "id": "9d5tb50Dp",
      "name": "color palette",
      "x": -131,
      "y": -600,
      "templateName": "Custom",
      "params": []
    }
  ],
  "comments": []
}