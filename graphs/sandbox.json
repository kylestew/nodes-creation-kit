{
  "id": "d802bd80-110d-11ef-a936-33d712d227ea",
  "version": "1.0.0-beta.2",
  "name": "sandbox",
  "nodes": [
    {
      "id": "KJvc2obvma",
      "name": "geo_color",
      "x": -195,
      "y": -671,
      "templateName": "Custom",
      "params": [
        {
          "name": "data"
        },
        {
          "name": "data type",
          "value": "geo"
        },
        {
          "name": "color",
          "value": [
            0.11372549019607843,
            0.9686274509803922,
            0.7254901960784313,
            1
          ]
        }
      ]
    },
    {
      "id": "X--wN8g2U3",
      "name": "_empty",
      "x": -194,
      "y": -763,
      "templateName": "_empty",
      "params": [
        {
          "name": "data"
        },
        {
          "name": "width",
          "value": 1
        },
        {
          "name": "height",
          "value": 1
        },
        {
          "name": "color",
          "value": [
            1,
            0,
            0,
            1
          ]
        }
      ]
    },
    {
      "id": "JbuyNd2TBb",
      "name": "tex_createSurface",
      "x": 217,
      "y": -765,
      "templateName": "Custom",
      "params": [
        {
          "name": "width",
          "value": 600
        },
        {
          "name": "height",
          "value": 600
        },
        {
          "name": "range",
          "value": [
            -1.1,
            1.1
          ]
        },
        {
          "name": "clearColor",
          "value": [
            0.43137254901960786,
            0.396078431372549,
            0.9019607843137255,
            1
          ]
        }
      ]
    },
    {
      "id": "vXFPNljqDa",
      "name": "_DISPLAY",
      "x": 31,
      "y": -372,
      "templateName": "Custom",
      "params": [
        {
          "name": "data",
          "source": {
            "id": "6_vDQinCE",
            "port": "out"
          }
        },
        {
          "name": "live",
          "public": true,
          "value": true
        },
        {
          "name": "RUN",
          "public": true
        }
      ]
    },
    {
      "id": "0r60ivdTh5",
      "name": "geo_toTex",
      "x": 217,
      "y": -698,
      "templateName": "Custom",
      "params": [
        {
          "name": "geoData"
        },
        {
          "name": "texData",
          "source": {
            "id": "JbuyNd2TBb",
            "port": "out"
          }
        }
      ]
    },
    {
      "id": "Vwk6BriGv",
      "name": "geo_copyToPoints",
      "x": -203,
      "y": -579,
      "templateName": "Custom",
      "params": [
        {
          "name": "data"
        },
        {
          "name": "width",
          "value": 1
        },
        {
          "name": "height",
          "value": 1
        },
        {
          "name": "color",
          "value": [
            1,
            0,
            0,
            1
          ]
        }
      ]
    },
    {
      "id": "sOq_lRVq_",
      "name": "cell size",
      "x": 3,
      "y": -767,
      "templateName": "Custom",
      "params": [
        {
          "name": "cellSize",
          "public": true,
          "value": 0.25
        }
      ]
    },
    {
      "id": "_vP_YKOVh",
      "name": "geo_attribCreate",
      "x": -198,
      "y": -501,
      "templateName": "Custom",
      "params": [
        {
          "name": "data"
        },
        {
          "name": "data type",
          "value": "geo"
        },
        {
          "name": "color",
          "value": [
            0.11372549019607843,
            0.9686274509803922,
            0.7254901960784313,
            1
          ]
        }
      ]
    },
    {
      "id": "HKf7XUCC8",
      "name": "geo_Wrangle",
      "x": 114,
      "y": -513,
      "templateName": "Custom",
      "draft": "module.exports = (node, graph) => {\n    const dataIn = node.in('data')\n    const dataOut = node.out('out')\n\n    node.cook = () => {\n        cookUp(node)\n\n        let data = dataIn.value || { pts: [], geo: [] }\n\n        // for each primitive (geo)\n        const centers = data.geo.map(geo => {\n            // find the centroid\n            const sum = geo.pt_indices.reduce((acc, idx) => {\n                return {\n                    x: acc.x + data.pts[idx].x,\n                    y: acc.y + data.pts[idx].y\n                };\n            }, { x: 0, y: 0 });\n            const avg = {\n                x: sum.x / geo.pt_indices.length,\n                y: sum.y / geo.pt_indices.length\n            };\n            \n            return avg\n        });\n\n        // data stream out is just point centers\n        data = { pts: centers, geo: [] }\n\n        dataOut.setValue(data)\n        node.comment = `pts: ${data.pts.length}, geo: ${data.geo.length}`\n    }\n}\n\nfunction cookUp(node) {\n    node.ports\n        .filter((port) => port.dir === 0 && port.source != null)\n        .forEach((port) => {\n            if (typeof port.source.node.cook === 'function') {\n                port.source.node.cook()\n            }\n        })\n}\n",
      "params": [
        {
          "name": "data",
          "source": {
            "id": "pAobF6noK",
            "port": "out"
          }
        }
      ]
    },
    {
      "id": "-c4qQ9pZd",
      "name": "geo_Grid",
      "x": 42,
      "y": -665,
      "templateName": "geo_Grid",
      "params": [
        {
          "name": "centerPt",
          "value": [
            0,
            0
          ]
        },
        {
          "name": "width",
          "value": 2
        },
        {
          "name": "height",
          "value": 2
        },
        {
          "name": "rows",
          "value": 4
        },
        {
          "name": "cols",
          "value": 4
        }
      ]
    },
    {
      "id": "6_vDQinCE",
      "name": "geo_Merge",
      "x": 33,
      "y": -435,
      "templateName": "geo_Merge",
      "params": [
        {
          "name": "data0",
          "source": {
            "id": "pAobF6noK",
            "port": "out"
          }
        },
        {
          "name": "data1",
          "source": {
            "id": "HKf7XUCC8",
            "port": "out"
          }
        }
      ]
    },
    {
      "id": "pAobF6noK",
      "name": "_Null",
      "x": 39,
      "y": -590,
      "templateName": "Custom",
      "params": [
        {
          "name": "data",
          "source": {
            "id": "-c4qQ9pZd",
            "port": "out"
          }
        }
      ]
    }
  ],
  "comments": [
    {
      "id": "WdQlV3AG6",
      "x": -216,
      "y": -409,
      "width": 180,
      "height": 50,
      "fontSize": 10,
      "backgroundColor": [
        0.1,
        0.1,
        0.1,
        1
      ],
      "textColor": [
        0.7,
        0.7,
        0.7,
        1
      ],
      "text": "copy to point and scale/rotate based on point data?",
      "collapseFlags": {}
    }
  ]
}